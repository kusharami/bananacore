function testQFont()
{
	assert(QFont.prototype.key === "QFont");
	assert(QFont.prototype.defaultFamily === "");
	assert(QFont.prototype.lastResortFamily === "");
	assert(QFont.prototype.lastResortFont === "");
	assert(QFont.prototype.family === "");
	assert(QFont.prototype.styleName === "");
	assert(isNaN(QFont.prototype.pointSize));
	assert(QFont.prototype.pixelSize === -1);
	assert(QFont.prototype.weight === -1);
	assert(QFont.prototype.stretch === -1);
	assert(QFont.prototype.bold === false);
	assert(QFont.prototype.italic === false);
	assert(QFont.prototype.underline === false);
	assert(QFont.prototype.overline === false);
	assert(QFont.prototype.strikeOut === false);
	assert(QFont.prototype.fixedPitch === false);
	assert(QFont.prototype.kerning === false);
	assert(QFont.prototype.style === -1);
	assert(QFont.prototype.styleHint === -1);
	assert(QFont.prototype.styleStrategy === 0);
	assert(isNaN(QFont.prototype.letterSpacing));
	assert(QFont.prototype.letterSpacingType === -1);
	assert(isNaN(QFont.prototype.wordSpacing));
	assert(QFont.prototype.capitalization === -1);
	assert(QFont.prototype.hintingPreference === -1);
	assert(QFont.prototype.toString() === "QFont");
	assert(QFont.prototype.exactMatch() === false);
	assert(QFont.prototype.equals("") === false);
	assert(QFont.prototype.fromString("") === false);
	QFont.prototype.setLetterSpacing(QFont.PercentageSpacing, 0.9);
	QFont.prototype.setStyleHint(QFont.AnyStyle, QFont.PreferBitmap);

	assert(isFinite(QFont.Helvetica));
	assert(isFinite(QFont.SansSerif));
	assert(isFinite(QFont.Times));
	assert(isFinite(QFont.Serif));
	assert(isFinite(QFont.Courier));
	assert(isFinite(QFont.TypeWriter));
	assert(isFinite(QFont.OldEnglish));
	assert(isFinite(QFont.Decorative));
	assert(isFinite(QFont.System));
	assert(isFinite(QFont.AnyStyle));
	assert(isFinite(QFont.Cursive));
	assert(isFinite(QFont.Monospace));
	assert(isFinite(QFont.Fantasy));
	assert(isFinite(QFont.StyleNormal));
	assert(isFinite(QFont.StyleItalic));
	assert(isFinite(QFont.StyleOblique));
	assert(isFinite(QFont.PreferDefault));
	assert(isFinite(QFont.PreferBitmap));
	assert(isFinite(QFont.PreferDevice));
	assert(isFinite(QFont.PreferOutline));
	assert(isFinite(QFont.ForceOutline));
	assert(isFinite(QFont.PreferMatch));
	assert(isFinite(QFont.PreferQuality));
	assert(isFinite(QFont.PreferAntialias));
	assert(isFinite(QFont.PreferDefaultHinting));
	assert(isFinite(QFont.PreferNoHinting));
	assert(isFinite(QFont.PreferVerticalHinting));
	assert(isFinite(QFont.PreferFullHinting));
	assert(isFinite(QFont.NoAntialias));
	assert(isFinite(QFont.OpenGLCompatible));
	assert(isFinite(QFont.ForceIntegerMetrics));
	assert(isFinite(QFont.NoSubpixelAntialias));
	assert(isFinite(QFont.NoFontMerging));
	assert(isFinite(QFont.Thin));
	assert(isFinite(QFont.ExtraLight));
	assert(isFinite(QFont.Light));
	assert(isFinite(QFont.Normal));
	assert(isFinite(QFont.Medium));
	assert(isFinite(QFont.DemiBold));
	assert(isFinite(QFont.Bold));
	assert(isFinite(QFont.ExtraBold));
	assert(isFinite(QFont.Black));
	assert(isFinite(QFont.UltraCondensed));
	assert(isFinite(QFont.ExtraCondensed));
	assert(isFinite(QFont.Condensed));
	assert(isFinite(QFont.SemiCondensed));
	assert(isFinite(QFont.Unstretched));
	assert(isFinite(QFont.SemiExpanded));
	assert(isFinite(QFont.Expanded));
	assert(isFinite(QFont.ExtraExpanded));
	assert(isFinite(QFont.UltraExpanded));
	assert(isFinite(QFont.MixedCase));
	assert(isFinite(QFont.AllUppercase));
	assert(isFinite(QFont.AllLowercase));
	assert(isFinite(QFont.SmallCaps));
	assert(isFinite(QFont.Capitalize));
	assert(isFinite(QFont.PercentageSpacing));
	assert(isFinite(QFont.AbsoluteSpacing));

	var font = new QFont();
	assert(font instanceof QFont);
	assert(font.exactMatch());
	assert(font.key === font.toString());
	font.pointSize = 15;
	assert(font.pixelSize === -1);
	font.pixelSize = 25;
	assert(font.pointSize === -1);
	font.stretch = QFont.ExtraExpanded;
	assert(!font.exactMatch());
	assert(!font.equals("Arial"));

	font = new QFont("Arial");
	assert(font.equals("Arial"));

	print("QFont OK");
}
